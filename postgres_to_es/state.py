import abc
import json
from pathlib import Path
from typing import Any, Optional

from redis import Redis


class BaseStorage:
    @abc.abstractmethod
    def save_state(self, state: dict) -> None:
        """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ"""
        pass

    @abc.abstractmethod
    def retrieve_state(self) -> dict:
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ –∏–∑ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞"""
        pass


class JsonFileStorage(BaseStorage):
    """
    Example:

    storage = JsonFileStorage('resources/storage.json')
    s = State(storage)
    s.set_state('last_modified', '2020-01-01 00:00:00')
    s.get_state('last_modified')
    """

    def __init__(self, file_path: Optional[str] = None):
        self.file_path = file_path
        Path(self.file_path).touch()

    def save_state(self, state):
        prev_state = self.retrieve_state()
        new_state = {**prev_state, **state}
        with open(self.file_path, 'w') as file:
            file.write(json.dumps(new_state))

    def retrieve_state(self):
        with open(self.file_path, 'r') as f:
            content = f.read()

            if not content:
                return {}

            return json.loads(content)


class State:
    """
    –ö–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –¥–∞–Ω–Ω—ã–º–∏, —á—Ç–æ–±—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ
    –Ω–µ –ø–µ—Ä–µ—á–∏—Ç—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Å –Ω–∞—á–∞–ª–∞. –ó–¥–µ—Å—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
    —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ —Ñ–∞–π–ª. –í —Ü–µ–ª–æ–º –Ω–∏—á–µ–≥–æ –Ω–µ –º–µ—à–∞–µ—Ç –ø–æ–º–µ–Ω—è—Ç—å —ç—Ç–æ
    –ø–æ–≤–µ–¥–µ–Ω–∏–µ –Ω–∞ —Ä–∞–±–æ—Ç—É —Å –ë–î –∏–ª–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º.
    """

    def __init__(self, storage: BaseStorage):
        self.storage = storage

    def set_state(self, key: str, value: Any) -> None:
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞"""
        self.storage.save_state({key: value})

    def get_state(self, key: str) -> Any:
        """–ü–æ–ª—É—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º—É –∫–ª—é—á—É"""
        state = self.storage.retrieve_state()
        return state.get(key)


class RedisStorage(BaseStorage):
    """
    –í–º–µ—Å—Ç–æ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ key-value-—Ö—Ä–∞–Ω–∏–ª–∏—â–µ –Ω–∞–ø–æ–¥–æ–±–∏–µ Redis.
    –î–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å —Ä–∞–±–æ—Ç–æ–π –≤ Redis –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç–∞—Ç—å—é –∏–∑ —É—á–µ–±–Ω–∏–∫–∞ Python.
    –í –≤–∞—à–µ–º —Ä–µ—à–µ–Ω–∏–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–ª–∞—Å—Å RedisStorage, –∫–æ—Ç–æ—Ä—ã–π –≤–º–µ—Å—Ç–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –æ–±—ä–µ–∫—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Redis. –í—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ –æ—Å—Ç–∞—ë—Ç—Å—è
    —Ç–∞–∫–∏–º –∂–µ: –Ω—É–∂–Ω–æ —á–∏—Ç–∞—Ç—å –∏ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∞–π–ª —Å —Ç–µ—Å—Ç–∞–º–∏ Pythonüíæ.
    """

    def __init__(self, redis_adapter: Redis):
        self.redis_adapter = redis_adapter
